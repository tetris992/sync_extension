{"version":3,"file":"background.bundle.js","mappings":"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","sources":["webpack://chrome-extension/./src/background.js"],"sourcesContent":["/****************************************\n * background.js (수정본)\n ****************************************/\n\n// 확장 설치 시 로그 확인\nchrome.runtime.onInstalled.addListener(() => {\n  console.log('[background] extension installed');\n});\n\n/**\n * [추가] chrome.tabs.sendMessage를 안전하게 호출하는 헬퍼 함수\n *   - 타임아웃(기본 10초) 내에 응답이 없으면 자동 실패 처리\n *   - chrome.runtime.lastError 발생 시 실패 처리\n *   - 정상 응답 시에는 성공으로 sendResponse\n */\nfunction safeSendMessage(tabId, message, sendResponse, timeoutMs = 10000) {\n  let responded = false;\n\n  const timerId = setTimeout(() => {\n    if (!responded) {\n      responded = true;\n      console.error('[background] safeSendMessage TIMEOUT:', message.action);\n      sendResponse({\n        success: false,\n        message: 'Content script 응답 타임아웃: ' + message.action,\n      });\n    }\n  }, timeoutMs);\n\n  chrome.tabs.sendMessage(tabId, message, (resp) => {\n    if (responded) return; // 이미 타임아웃 등으로 응답 처리됨\n\n    responded = true;\n    clearTimeout(timerId);\n\n    // chrome.runtime.lastError 체크\n    if (chrome.runtime.lastError) {\n      console.error(\n        '[background] safeSendMessage lastError:',\n        chrome.runtime.lastError.message\n      );\n      sendResponse({\n        success: false,\n        message: 'sendMessage error: ' + chrome.runtime.lastError.message,\n      });\n      return;\n    }\n\n    // content script 응답이 아예 없는 경우\n    if (!resp) {\n      console.error(\n        '[background] safeSendMessage got empty resp:',\n        message.action\n      );\n      sendResponse({\n        success: false,\n        message: 'No response from content script: ' + message.action,\n      });\n      return;\n    }\n\n    // 정상 응답이면 content script가 준 resp를 포함해 success: true로 반환\n    console.log('[background] safeSendMessage success resp:', resp);\n    sendResponse({ success: true, ...resp });\n  });\n}\n\n// (1) 외부(React 등)에서 오는 메시지 처리\nchrome.runtime.onMessageExternal.addListener(\n  (request, sender, sendResponse) => {\n    // [A] 토큰 SET\n    if (request.action === 'SET_TOKEN') {\n      const { token } = request;\n      console.log('[background] Received token from React:', token);\n\n      chrome.storage.local.set({ accessToken: token }, () => {\n        console.log('[background] accessToken stored in chrome.storage.local');\n        sendResponse({ success: true });\n      });\n\n      return true; // 비동기 응답\n    }\n\n    // [B] \"SET_OTA_TOGGLES\" 액션 처리\n    if (request.action === 'SET_OTA_TOGGLES') {\n      const { toggles } = request; // 예: { GoodMotel: true, Yanolja: false, ... }\n      console.log('[background] Received SET_OTA_TOGGLES from React:', toggles);\n\n      chrome.storage.local.set({ otaToggles: toggles }, () => {\n        console.log('[background] otaToggles stored in chrome.storage.local');\n        sendResponse({ success: true });\n      });\n\n      return true; // 비동기 응답\n    }\n\n    // [B1] 여기어때모텔 스크래핑\n    else if (request.action === 'TRIGGER_GOODMOTEL_SCRAPE') {\n      console.log('[background] Received TRIGGER_GOODMOTEL_SCRAPE:', request);\n      const { hotelId } = request;\n\n      // ad.goodchoice.kr 탭 찾기\n      chrome.tabs.query({ url: 'https://ad.goodchoice.kr/*' }, (tabs) => {\n        if (!tabs.length) {\n          console.error(\n            '[background] No active tab found for ad.goodchoice.kr/*'\n          );\n          sendResponse({\n            success: false,\n            message: '굿모텔(광고센터) 탭이 없거나 로그인 안됨',\n          });\n          return;\n        }\n\n        const targetTab = tabs[0];\n        console.log('[background] Found GoodMotel tab:', targetTab.id);\n\n        // [수정] safeSendMessage 사용\n        safeSendMessage(\n          targetTab.id,\n          { action: 'SCRAPE_GOODMOTEL', hotelId },\n          sendResponse\n        );\n      });\n      return true; // 비동기 응답\n    }\n\n    // [B3] 굿호텔 스크래핑\n    else if (request.action === 'TRIGGER_GOODHOTEL_SCRAPE') {\n      console.log(\n        '[background] Received TRIGGER_GOODHOTEL_SCRAPE action',\n        request\n      );\n      const { hotelId } = request;\n\n      chrome.tabs.query({}, (allTabs) => {\n        console.log(\n          '[background] All open tabs:',\n          allTabs.map((tab) => tab.url)\n        );\n      });\n\n      // partner.goodchoice.kr 탭 찾기\n      chrome.tabs.query(\n        { url: 'https://partner.goodchoice.kr/*' },\n        function (tabs) {\n          if (!tabs.length) {\n            console.error(\n              '[background] No active tab found for partner.goodchoice.kr/*'\n            );\n            sendResponse({ success: false, message: 'No active tab found' });\n            return;\n          }\n\n          const targetTab = tabs[0];\n          console.log('[background] Found GoodHotel tab:', targetTab.id);\n\n          chrome.tabs.sendMessage(\n            targetTab.id,\n            { action: 'SCRAPE_GOOD_HOTEL', hotelId },\n            function (resp) {\n              if (chrome.runtime.lastError) {\n                console.error(\n                  '[background] Error sending message to GoodHotel content script:',\n                  chrome.runtime.lastError\n                );\n                sendResponse({\n                  success: false,\n                  message: chrome.runtime.lastError.message,\n                });\n              } else {\n                console.log(\n                  '[background] Response from GoodHotel content script:',\n                  resp\n                );\n                sendResponse({ success: true, ...resp });\n              }\n            }\n          );\n        }\n      );\n      return true; // 비동기 응답\n    }\n\n    // [B4] 아고다(Agoda) 스크래핑\n    else if (request.action === 'TRIGGER_AGODA_SCRAPE') {\n      console.log('[background] TRIGGER_AGODA_SCRAPE:', request);\n      const { hotelId, siteName, roomTypes } = request;\n\n      // ycs.agoda.com/* 탭 찾기\n      chrome.tabs.query({ url: 'https://ycs.agoda.com/*' }, (tabs) => {\n        if (!tabs.length) {\n          console.error('[background] No active tab found for ycs.agoda.com/*');\n          sendResponse({\n            success: false,\n            message: '아고다(YCS) 탭이 없거나 로그인 안됨',\n          });\n          return;\n        }\n\n        const targetTab = tabs[0];\n        console.log('[background] Found Agoda tab:', targetTab.id);\n\n        safeSendMessage(\n          targetTab.id,\n          {\n            action: 'SCRAPE_AGODA',\n            hotelId,\n            siteName: siteName || 'Agoda',\n            roomTypes: roomTypes || [],\n          },\n          sendResponse\n        );\n      });\n      return true; // 비동기 응답\n    }\n\n    // (★ 추가) [B4] 야놀자(Yanolja) 스크래핑\n    else if (request.action === 'TRIGGER_YANOLJA_SCRAPE') {\n      console.log('[background] TRIGGER_YANOLJA_SCRAPE:', request);\n      const { hotelId } = request;\n\n      // partner.yanolja.com 탭 찾기\n      chrome.tabs.query({ url: 'https://partner.yanolja.com/*' }, (tabs) => {\n        if (!tabs.length) {\n          console.error(\n            '[background] No active tab found for partner.yanolja.com/*'\n          );\n          sendResponse({\n            success: false,\n            message: '야놀자(제휴센터) 탭이 없거나 로그인 안됨',\n          });\n          return;\n        }\n\n        const targetTab = tabs[0];\n        console.log('[background] Found Yanolja tab:', targetTab.id);\n\n        safeSendMessage(\n          targetTab.id,\n          { action: 'SCRAPE_YANOLJA', hotelId },\n          sendResponse\n        );\n      });\n      return true; // 비동기\n    }\n\n    // [B5] 부킹(Booking) 스크래핑\n    else if (request.action === 'TRIGGER_BOOKING_SCRAPE') {\n      console.log('[background] TRIGGER_BOOKING_SCRAPE:', request);\n      const { hotelId, siteName, roomTypes } = request;\n\n      // admin.booking.com/* 탭 찾기\n      chrome.tabs.query({ url: 'https://admin.booking.com/*' }, (tabs) => {\n        if (!tabs.length) {\n          console.error(\n            '[background] No active tab found for admin.booking.com/*'\n          );\n          sendResponse({\n            success: false,\n            message: '부킹(Booking) 탭이 없거나 로그인 안됨',\n          });\n          return;\n        }\n\n        const targetTab = tabs[0];\n        console.log('[background] Found Booking tab:', targetTab.id);\n\n        // (1) 이동할 URL 구성 (실제 hotel_id, 날짜 설정은 예시)\n        const today = new Date();\n        const startDate = today.toISOString().split('T')[0];\n        const endDateObj = new Date(today.getTime() + 30 * 86400000); // 30일 후\n        const endDate = endDateObj.toISOString().split('T')[0];\n\n        const finalURL =\n          `https://admin.booking.com/hotel/hoteladmin/extranet_ng/manage/search_reservations.html` +\n          `?upcoming_reservations=1&source=nav` +\n          `&hotel_id=6876426` + // 예시\n          `&lang=ko` +\n          `&date_from=${startDate}` +\n          `&date_to=${endDate}` +\n          `&date_type=arrival`;\n\n        // console.log('[background] Updating tab to finalURL:', finalURL);\n\n        // (2) 탭 이동\n        chrome.tabs.update(targetTab.id, { url: finalURL }, (_updatedTab) => {\n          if (chrome.runtime.lastError) {\n            console.error(\n              '[background] tabs.update error:',\n              chrome.runtime.lastError\n            );\n            sendResponse({\n              success: false,\n              message: chrome.runtime.lastError.message,\n            });\n            return;\n          }\n\n          // (3) onUpdated 리스너\n          const handleUpdated = (tabId, changeInfo, tab) => {\n            if (tabId === targetTab.id && changeInfo.status === 'complete') {\n              console.log('[background] Booking tab fully loaded -> wait 3s');\n              chrome.tabs.onUpdated.removeListener(handleUpdated);\n\n              setTimeout(() => {\n                // 이제 content script로 스크래핑 지시\n                safeSendMessage(\n                  targetTab.id,\n                  {\n                    action: 'SCRAPE_BOOKING',\n                    hotelId,\n                    siteName: siteName || 'Booking',\n                    roomTypes: roomTypes || [],\n                  },\n                  sendResponse\n                );\n              }, 3000);\n            }\n          };\n\n          chrome.tabs.onUpdated.addListener(handleUpdated);\n        });\n      });\n      return true; // 비동기\n    }\n\n    // [B6] 익스피디아(Expedia) 스크래핑\n    else if (request.action === 'TRIGGER_EXPEDIA_SCRAPE') {\n      console.log('[background] TRIGGER_EXPEDIA_SCRAPE:', request);\n      const { hotelId, siteName } = request;\n\n      // 익스피디아 도메인 탭 찾기\n      chrome.tabs.query(\n        {\n          url: [\n            'https://www.expediapartnercentral.com/*',\n            'https://apps.expediapartnercentral.com/*',\n          ],\n        },\n        (tabs) => {\n          if (!tabs.length) {\n            console.error('[background] No tab found for Expedia domain');\n            sendResponse({\n              success: false,\n              message: '익스피디아(Expedia) 탭이 없거나 로그인 안됨',\n            });\n            return;\n          }\n\n          const targetTab = tabs[0];\n          console.log('[background] Found Expedia tab:', targetTab.id);\n\n          // 예시 호텔 ID\n          const fallbackExpediaId = '59872761';\n          const finalExpediaURL = `https://apps.expediapartnercentral.com/lodging/bookings?htid=${fallbackExpediaId}`;\n\n          // 탭 이동\n          chrome.tabs.update(targetTab.id, { url: finalExpediaURL }, () => {\n            if (chrome.runtime.lastError) {\n              console.error(\n                '[background] tabs.update error:',\n                chrome.runtime.lastError\n              );\n              sendResponse({\n                success: false,\n                message: chrome.runtime.lastError.message,\n              });\n              return;\n            }\n\n            // 로딩 완료 감지\n            const handleUpdated = (tabId, changeInfo, tab) => {\n              if (tabId === targetTab.id && changeInfo.status === 'complete') {\n                chrome.tabs.onUpdated.removeListener(handleUpdated);\n\n                setTimeout(() => {\n                  console.log(\n                    '[background] Expedia page loaded => SCRAPE_EXPEDIA'\n                  );\n                  safeSendMessage(\n                    targetTab.id,\n                    { action: 'SCRAPE_EXPEDIA', hotelId, siteName },\n                    sendResponse\n                  );\n                }, 3000);\n              }\n            };\n\n            chrome.tabs.onUpdated.addListener(handleUpdated);\n          });\n        }\n      );\n      return true; // 비동기\n    }\n\n    // (★ 추가) [B7] 쿨스테이(CoolStay) 스크래핑\n    else if (request.action === 'TRIGGER_COOLSTAY_SCRAPE') {\n      console.log('[background] TRIGGER_COOLSTAY_SCRAPE:', request);\n      const { hotelId, siteName } = request;\n\n      // 1) pms.coolstay.co.kr 탭 찾기\n      chrome.tabs.query({ url: 'https://pms.coolstay.co.kr/*' }, (tabs) => {\n        if (!tabs.length) {\n          console.error(\n            '[background] No active tab found for pms.coolstay.co.kr/*'\n          );\n          sendResponse({\n            success: false,\n            message: '쿨스테이 탭이 없거나 로그인 안됨',\n          });\n          return;\n        }\n\n        const targetTab = tabs[0];\n        console.log('[background] Found CoolStay tab:', targetTab.id);\n\n        // 2) 이번 달 1일~말일을 구해 finalURL 생성\n        const now = new Date();\n        const startDate = formatYMD(\n          new Date(now.getFullYear(), now.getMonth(), 1)\n        ); // YYYYMMDD\n        const endDate = formatYMD(\n          new Date(now.getFullYear(), now.getMonth() + 1, 0)\n        );\n        // 예: \"20250101\" ~ \"20250131\"\n\n        const finalURL =\n          `https://pms.coolstay.co.kr/motel-biz-pc/reservation?&page=1` +\n          `&searchType=ST602,ST608` +\n          `&searchExtra=${startDate}|${endDate},` +\n          `&sort=BOOK_DESC&tabState=0` +\n          `&selectSort=0&selectChannelOut=0` +\n          `&selectDateRange=customInput&selectEnterType=0`;\n\n        // 3) 탭 이동\n        chrome.tabs.update(targetTab.id, { url: finalURL }, () => {\n          if (chrome.runtime.lastError) {\n            console.error(\n              '[background] tabs.update error:',\n              chrome.runtime.lastError\n            );\n            sendResponse({\n              success: false,\n              message: chrome.runtime.lastError.message,\n            });\n            return;\n          }\n\n          // 4) onUpdated 로딩 완료 감지\n          const handleUpdated = (tabId, changeInfo, tab) => {\n            if (tabId === targetTab.id && changeInfo.status === 'complete') {\n              chrome.tabs.onUpdated.removeListener(handleUpdated);\n\n              // React 등 렌더링 대기 (3초)\n              setTimeout(() => {\n                // 5) Content Script에 파싱 요청\n                safeSendMessage(\n                  targetTab.id,\n                  {\n                    action: 'SCRAPE_COOLSTAY',\n                    hotelId,\n                    siteName: siteName || 'CoolStay',\n                  },\n                  sendResponse\n                );\n              }, 3000);\n            }\n          };\n          chrome.tabs.onUpdated.addListener(handleUpdated);\n        });\n      });\n\n      return true; // 비동기\n    }\n\n    function formatYMD(dateObj) {\n      // YYYYMMDD 형태로 포맷\n      const y = dateObj.getFullYear();\n      const m = String(dateObj.getMonth() + 1).padStart(2, '0');\n      const d = String(dateObj.getDate()).padStart(2, '0');\n      return `${y}${m}${d}`;\n    }\n\n    // 액션이 매칭되지 않으면 false\n    return false;\n  }\n);\n\n// (2) 내부 메시지 처리 (content script → background)\nchrome.runtime.onMessage.addListener((req, sender, sendResponse) => {\n  if (req.action === 'GET_TOKEN') {\n    // chrome.storage.local에서 토큰 꺼내서 응답\n    chrome.storage.local.get('accessToken', (res) => {\n      sendResponse({ accessToken: res.accessToken || '' });\n    });\n    return true; // 비동기 응답\n  }\n\n  if (req.action === 'GET_OTA_TOGGLES') {\n    console.log('[background] GET_OTA_TOGGLES request received');\n    chrome.storage.local.get(['otaToggles'], (res) => {\n      sendResponse({ otaToggles: res.otaToggles || {} });\n    });\n    return true; // 비동기 응답\n  }\n\n  return false;\n});\n"],"names":["safeSendMessage","tabId","message","sendResponse","responded","timerId","setTimeout","console","error","action","success","arguments","length","undefined","chrome","tabs","sendMessage","resp","clearTimeout","runtime","lastError","log","_objectSpread","onInstalled","addListener","onMessageExternal","request","sender","token","storage","local","set","accessToken","toggles","otaToggles","hotelId","query","url","targetTab","id","allTabs","map","tab","siteName","roomTypes","today","Date","startDate","toISOString","split","endDate","getTime","finalURL","concat","update","_updatedTab","handleUpdated","changeInfo","status","onUpdated","removeListener","finalExpediaURL","now","formatYMD","getFullYear","getMonth","dateObj","y","m","String","padStart","d","getDate","onMessage","req","get","res"],"sourceRoot":""}